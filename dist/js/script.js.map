{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/normalize.css/normalize.css","webpack:///./src/css/style.css","webpack:///./src/js/calculator/calculator.js","webpack:///./src/js/calculator/helpers/operation.js","webpack:///./src/js/calculator/theming/themeColor.js","webpack:///./src/js/calculator/theming/themeType.js","webpack:///./src/js/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;;;AAGA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;ACzLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,a;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;AAOA,2E;;;;;;;;;;;;;AC9GA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4E;;;;;;;;;;;;;AC7BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gF;;;;;;;;;;;;;;;;;;AChCA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,a","file":"js/script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","'use strict';\r\n\r\nimport ChangeTheme from './theming/themeColor';\r\nimport ChangeThemeType from './theming/themeType';\r\nimport operations from './helpers/operation'; \r\n\r\n\r\nfunction Calc(id) {\r\n\r\n    var doc = document,\r\n        elem = doc.querySelector(id),\r\n        display = elem.querySelector('.display'),\r\n        historyDisplay = elem.querySelector('.displayHistory'),\r\n        historyNumber = '',\r\n        memoryCurrentNumber = 0,\r\n        memoryOperation = '',\r\n        entryNewNumber = false;\r\n\r\n    var changeTheme = new ChangeTheme(id);\r\n    changeTheme.init();\r\n\r\n    var changeThemeType = new ChangeThemeType(id);\r\n    changeThemeType.init();\r\n    \r\n    this.init = function(){\r\n       \r\n        // События на клик, ввод цифр \r\n        let keyNumbers = elem.querySelectorAll('.keynumber');\r\n        for (let i = 0; i < keyNumbers.length; i++){\r\n            let keyNumber = keyNumbers[i];\r\n            keyNumber.addEventListener('click', pressKeyNumber);\r\n        }\r\n    \r\n    \r\n        // События на клик по операциям \r\n        let keyOperations = elem.querySelectorAll('.keyoperations');\r\n        for (let i = 0; i<keyOperations.length; i++){\r\n            let keyOperation = keyOperations[i];\r\n            keyOperation.addEventListener('click', operationAction);\r\n        }\r\n    \r\n    \r\n        // События на клик, очистка калькулятора \r\n        let keyAc = elem.querySelector('.keyac');\r\n        keyAc.addEventListener('click', pressKeyClear);\r\n    \r\n    \r\n        // События на клик, добавление точки \r\n        let keyDot = elem.querySelector('.keydot');\r\n        keyDot.addEventListener('click', pressKeyDot);\r\n    }\r\n    \r\n    \r\n    \r\n    // Функция вывода цифр на экран\r\n    \r\n    var pressKeyNumber = function(clickEvent){\r\n\r\n        let numb = clickEvent.target.textContent;\r\n\r\n        if (entryNewNumber){\r\n            display.value = numb;\r\n            historyDisplay.value += display.value;\r\n            entryNewNumber = false;\r\n        } else {\r\n            if (display.value === '0'){\r\n                display.value = numb;\r\n                historyDisplay.value = display.value;\r\n            } else {\r\n                display.value += numb;\r\n                historyDisplay.value += numb;\r\n            };\r\n        };\r\n\r\n        console.log(historyNumber);\r\n    \r\n    };\r\n        \r\n\r\n    // Функция точки, \r\n\r\n    var pressKeyDot = function pressKeyDot(){\r\n\r\n        var localMemoryDot = display.value;\r\n\r\n        if (entryNewNumber){\r\n            localMemoryDot = '0.';\r\n            entryNewNumber = false;\r\n        } else {\r\n            if (localMemoryDot.indexOf('.') === -1){\r\n                localMemoryDot += '.';\r\n            };\r\n        };\r\n\r\n        display.value = localMemoryDot;\r\n        historyNumber = display.value;\r\n        historyDisplay.value = historyNumber;\r\n\r\n    };\r\n\r\n\r\n    // Функция отвечающия за операции\r\n       \r\n    var operationAction = function (clickEvent){\r\n         \r\n        let localMemoryNumber = display.value,\r\n            symbol = clickEvent.target.textContent,\r\n            nameSymbol = clickEvent.target.value;\r\n        \r\n        if (entryNewNumber && memoryOperation !== '='){\r\n            display.value = memoryCurrentNumber;\r\n            memoryOperation = symbol;\r\n        } else {\r\n            if (nameSymbol !== ''){\r\n                entryNewNumber = true;\r\n                switch(nameSymbol){\r\n                    case 'log':\r\n                        memoryCurrentNumber = operations.log(localMemoryNumber);\r\n                        break;\r\n                    case 'rootx':\r\n                        memoryCurrentNumber = operations.sqrt(localMemoryNumber);\r\n                        break;\r\n                    case 'n!':\r\n                        memoryCurrentNumber = operations.factorial(localMemoryNumber);\r\n                        break;\r\n                    default:\r\n                        memoryCurrentNumber = parseFloat(localMemoryNumber);\r\n                };\r\n    \r\n                display.value = +memoryCurrentNumber.toFixed(10);\r\n                memoryOperation = nameSymbol;\r\n                \r\n    \r\n            } else{\r\n                entryNewNumber = true;\r\n                switch(memoryOperation){\r\n                    case '+':\r\n                        memoryCurrentNumber = operations.addition(memoryCurrentNumber, localMemoryNumber);\r\n                        break;\r\n                    case '-':\r\n                        memoryCurrentNumber = operations.subtraction(memoryCurrentNumber, localMemoryNumber);\r\n                        break;\r\n                    case '*':\r\n                        memoryCurrentNumber = operations.multiplication(memoryCurrentNumber, localMemoryNumber);\r\n                        break;\r\n                    case '/':\r\n                        memoryCurrentNumber = operations.division(memoryCurrentNumber, localMemoryNumber);\r\n                        break;\r\n                    case 'xn':\r\n                        memoryCurrentNumber = operations.exponentiation(memoryCurrentNumber, localMemoryNumber);\r\n                        break;\r\n                    case 'y√x':\r\n                        memoryCurrentNumber = operations.mathroot(memoryCurrentNumber, localMemoryNumber);\r\n                        break;\r\n                    default:\r\n                        memoryCurrentNumber = parseFloat(localMemoryNumber);\r\n                };\r\n                \r\n                display.value = +memoryCurrentNumber.toFixed(10);\r\n                memoryOperation = symbol;\r\n\r\n                if (memoryOperation !== '=') {\r\n                    historyDisplay.value += memoryOperation;\r\n                }\r\n                 \r\n\r\n            };\r\n            \r\n        };\r\n    \r\n    };\r\n\r\n    // Функция полной очистки значений калькулятора\r\n\r\n    var pressKeyClear = function (){\r\n        display.value = 0;\r\n        historyDisplay.value = '';\r\n        historyNumber = '';\r\n        memoryCurrentNumber = 0;\r\n        memoryOperation = '';\r\n        entryNewNumber = true;\r\n        \r\n    };\r\n}\r\n\r\nexport default Calc;\r\n","'use strict';\r\n  \r\nvar operations = {\r\n    /**\r\n     *  (1+2)\r\n     * Функция сложения двух чисел.\r\n     * В функцию передается два числа, порядок не имеет значения.     * \r\n     * Возращает результат от операции.\r\n     */\r\n    addition: function(numberOne, numberTwo){\r\n        let add = parseFloat(numberOne) + parseFloat(numberTwo);\r\n        return add;\r\n    },\r\n\r\n    /**\r\n     *  (1-2)\r\n     * Функция вычитания двух чисел.\r\n     * Из первого переданного числа вычитается второе переданное.\r\n     * Возращает результат от операции.\r\n     */\r\n    subtraction: function(numberOne, numberTwo){\r\n        let sub = parseFloat(numberOne) - parseFloat(numberTwo);\r\n        return sub;\r\n    },\r\n\r\n    /**\r\n     *  (1*2)\r\n     * Функция умножения, возращает произведение двух чисел.\r\n     */\r\n    multiplication: function(numberOne, numberTwo){\r\n        let mlp = parseFloat(numberOne) * parseFloat(numberTwo);\r\n        return mlp;\r\n    },\r\n\r\n    /**\r\n     *  (1/2)\r\n     * Функция деления, первое число делит на второе.\r\n     * Возращает результат от операции.\r\n     */\r\n    division: function(numberOne, numberTwo){\r\n        let dvsn = parseFloat(numberOne) / parseFloat(numberTwo);\r\n        return dvsn;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     *  (3!)\r\n     * Функция вычесления факториала.\r\n     * Возращает результат от операции.\r\n     */\r\n    factorial: function(numberOne){\r\n        let iteration = function(counter, accum){\r\n            if (counter === 1 || counter === 0) {\r\n                return accum;\r\n            } else {\r\n                return iteration(counter-1, counter * accum);\r\n            }   \r\n        }\r\n\r\n        return iteration(+numberOne, 1);\r\n    },\r\n\r\n\r\n    /**\r\n     *  (X в степени n)\r\n     * Функция возведения в степень. Используется стандартный функционал Math\r\n     * Возращает результат от операции.\r\n     */\r\n    exponentiation: function(numberOne, numberTwo){\r\n        let pow = Math.pow(numberOne, numberTwo);\r\n        return pow;\r\n    },\r\n\r\n    /**\r\n     *  (корень в степени n из X)\r\n     * Функция вычисления корня в n степени из x. Используется стандартный функционал Math\r\n     * Возращает результат от операции.\r\n     */\r\n    mathroot: function(numberOne, numberTwo){\r\n        let mrt = Math.pow(numberOne, 1/numberTwo);\r\n        return mrt;\r\n    },\r\n\r\n    /**\r\n     *  (логорифм из X)\r\n     * Функция вычисления логорифм из числа x. Используется стандартный функционал Math\r\n     * Возращает результат от операции.\r\n     */\r\n    log: function(numberOne){\r\n        let log = Math.log10(numberOne);\r\n        return log;\r\n    },\r\n\r\n        /**\r\n     *  (логорифм из X)\r\n     * Функция вычисления логорифм из числа x. Используется стандартный функционал Math\r\n     * Возращает результат от операции.\r\n     */\r\n    sqrt: function(numberOne){\r\n        let sqrt = Math.sqrt(numberOne);\r\n        return sqrt;\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default operations;","'use strict';\r\n\r\n/**\r\n * Смена темы, функция делает замену классов на элементе.\r\n * Функция находит элемен с ID calc и проверяет наличие классов dark и light,\r\n * если класс есть убирает его, если нет добавляет.\r\n * По умолчание один из классов должен быть на элементе.\r\n */\r\n\r\nfunction ChangeTheme(id){\r\n\r\n    let doc = document,\r\n        elem = doc.querySelector(id);\r\n\r\n    let changeTheme = function(){\r\n    \r\n        let calc = elem.querySelector('.calc');\r\n        calc.classList.toggle('dark');\r\n        calc.classList.toggle('light');\r\n    \r\n    };\r\n    \r\n    /* События на клик, смены цветовой темы */\r\n    this.init = function() {\r\n        let btnChangeTheme = elem.querySelector('.btnChangeTheme');\r\n        btnChangeTheme.addEventListener('click', changeTheme);\r\n    };\r\n}\r\n\r\nexport default ChangeTheme;","'use strict';\r\n\r\n/**\r\n * Смена режима калькулятора между простым и инженерным.\r\n * Функция меняет ширину калькулятора добавляя класс-модификатор и\r\n * изменяет стили в CSS \r\n */\r\n\r\nfunction ChangeThemeType(id){\r\n\r\n    let doc = document,\r\n        elem = doc.querySelector(id);\r\n\r\n    let changeThemeType = function(){\r\n\r\n        elem.classList.toggle('calculator--width');\r\n\r\n        let keys = elem.querySelectorAll('.key-engineering');\r\n        for (let i = 0; i < keys.length; i++){\r\n            keys[i].classList.toggle('key-engineering--none');\r\n        }\r\n\r\n    };\r\n\r\n    /* События на клик, смены типа калькулятора */\r\n    this.init = function(){\r\n        let btnChangeThemeType = elem.querySelector('.btnChangeThemeEngineering');\r\n        btnChangeThemeType.addEventListener('click', changeThemeType);\r\n    };\r\n\r\n};\r\n\r\nexport default ChangeThemeType;","'use strict';\r\n\r\nimport 'normalize.css';\r\nimport '../css/style.css';\r\nimport Calc from './calculator/calculator';\r\n\r\n// changeThemeType.init();\r\n\r\nvar calc = new Calc('#calculator');\r\ncalc.init();\r\n\r\nvar calc2 = new Calc('#calculator2');\r\ncalc2.init();"],"sourceRoot":""}