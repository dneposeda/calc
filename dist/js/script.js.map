{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/normalize.css/normalize.css","webpack:///./src/css/style.css","webpack:///./src/js/calculator.js","webpack:///./src/js/helper/operation.js","webpack:///./src/js/index.js","webpack:///./src/js/themeColor.js","webpack:///./src/js/themeType.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,uC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;ACAA;;;;AAIA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEQ;;;;;;;;;;;;;;;;;;;;ACpGR;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA;AACsE;;;AAGtE;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;;AAEA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;;ACnDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,4E;;;;;;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;;;;AAKA;;AAEA,gF","file":"js/script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","'use strict';\r\n\r\nimport {addition, subtraction, multiplication, division} from './helper/operation'; \r\n\r\nvar doc = document,\r\n    display = doc.getElementById('display'),\r\n    memoryCurrentNumber = 0,\r\n    memoryOperation = '',\r\n    entryNewNumber = false;\r\n\r\n\r\n\r\n/**\r\n * Функция вывода цифр на экран\r\n */\r\nfunction pressKeyNumber(numb){\r\n\r\n    if (entryNewNumber){\r\n        display.value = numb;\r\n        entryNewNumber = false;\r\n    } else {\r\n        if (display.value === '0'){\r\n            display.value = numb;\r\n        } else {\r\n            display.value += numb;\r\n        };\r\n    };\r\n\r\n};\r\n    \r\n    \r\n/**\r\n *\r\n *  Функция отвечающия за операции\r\n */    \r\nfunction pressKeyOperation(symbol){\r\n           \r\n    var localMemoryNumber = display.value;\r\n\r\n    if (entryNewNumber && memoryOperation !== '='){\r\n        display.value = memoryCurrentNumber;\r\n        memoryOperation = symbol;\r\n    } else {\r\n        entryNewNumber = true;\r\n        switch(memoryOperation){\r\n            case '+':\r\n                memoryCurrentNumber = addition(memoryCurrentNumber, localMemoryNumber);\r\n                break;\r\n            case '-':\r\n                memoryCurrentNumber = subtraction(memoryCurrentNumber, localMemoryNumber);\r\n                break;\r\n            case '*':\r\n                memoryCurrentNumber = multiplication(memoryCurrentNumber, localMemoryNumber);\r\n                break;\r\n            case '/':\r\n                memoryCurrentNumber = division(memoryCurrentNumber, localMemoryNumber);\r\n                break;\r\n            default:\r\n                memoryCurrentNumber = parseFloat(localMemoryNumber);\r\n        };\r\n        \r\n        display.value = +memoryCurrentNumber.toFixed(10);\r\n        memoryOperation = symbol;\r\n    };\r\n\r\n};\r\n\r\n\r\n/**\r\n * Функция точки, \r\n */\r\nfunction pressKeyDot(){\r\n\r\n    var localMemoryDot = display.value;\r\n\r\n    if (entryNewNumber){\r\n        localMemoryDot = '0.';\r\n        entryNewNumber = false;\r\n    } else {\r\n        if (localMemoryDot.indexOf('.') === -1){\r\n            localMemoryDot += '.';\r\n        };\r\n    };\r\n\r\n    display.value = localMemoryDot;\r\n\r\n};\r\n\r\n\r\n/**\r\n * Функция полной очистки значений калькулятора\r\n */\r\nfunction pressKeyClear(){\r\n    display.value = 0;\r\n    memoryCurrentNumber = 0;\r\n    memoryOperation = '';\r\n    entryNewNumber = true;\r\n    \r\n};\r\n\r\nexport {pressKeyNumber, pressKeyOperation, pressKeyDot, pressKeyClear};\r\n\r\n\r\n","'use strict';\r\n  \r\n\r\n/**\r\n *  (1+2)\r\n * Функция сложения двух чисел.\r\n * В функцию передается два числа, порядок не имеет значения.     * \r\n * Возращает результат от операции.\r\n */\r\nvar addition = function(numberOne, numberTwo){\r\n    let add = parseFloat(numberOne) + parseFloat(numberTwo);\r\n    return add;\r\n};\r\n\r\n/**\r\n *  (1-2)\r\n * Функция вычитания двух чисел.\r\n * Из первого переданного числа вычитается второе переданное.\r\n * Возращает результат от операции.\r\n */\r\nvar subtraction = function(numberOne, numberTwo){\r\n    let sub = parseFloat(numberOne) - parseFloat(numberTwo);\r\n    return sub;\r\n};\r\n\r\n/**\r\n *  (1*2)\r\n * Функция умножения, возращает произведение двух чисел.\r\n */\r\nvar multiplication = function(numberOne, numberTwo){\r\n    let mlp = parseFloat(numberOne) * parseFloat(numberTwo);\r\n    return mlp;\r\n};\r\n\r\n/**\r\n *  (1/2)\r\n * Функция деления, первое число делит на второе.\r\n * Возращает результат от операции.\r\n */\r\nvar division = function(numberOne, numberTwo){\r\n    let dvsn = parseFloat(numberOne) / parseFloat(numberTwo);\r\n    return dvsn;\r\n};\r\n\r\nexport {addition, subtraction, multiplication, division};","'use strict';\r\n\r\nimport 'normalize.css';\r\nimport '../css/style.css';\r\nimport changeTheme from './themeColor';\r\nimport changeThemeType from './themeType';\r\nimport {pressKeyNumber, pressKeyOperation, pressKeyDot, pressKeyClear} from './calculator';\r\n\r\n\r\nvar doc = document;\r\n\r\n\r\n/* События на клик, смены цветовой темы */\r\nvar btnChangeTheme = doc.getElementById('btnChangeTheme');\r\nbtnChangeTheme.addEventListener('click', changeTheme);\r\n\r\n\r\n/* События на клик, смены типа калькулятора */\r\nvar btnChangeThemeType = doc.getElementById('btnChangeThemeEngineering');\r\nbtnChangeThemeType.addEventListener('click', changeThemeType);\r\n\r\n\r\n/* События на клик, ввод цифр */\r\nvar keyNumbers = doc.querySelectorAll('.keynumber');\r\n\r\nfor (let i = 0; i < keyNumbers.length; i++){\r\n    let keyNumber = keyNumbers[i];\r\n    keyNumber.addEventListener('click', function(e){\r\n        pressKeyNumber(e.target.textContent);\r\n    });\r\n}\r\n\r\n\r\n/* События на клик по операциям */\r\nvar keyOperations = doc.querySelectorAll('.keyoperations');\r\n\r\nfor (let i = 0; i<keyOperations.length; i++){\r\n    let keyOperation = keyOperations[i];\r\n    keyOperation.addEventListener('click', function(e){\r\n        pressKeyOperation(e.target.textContent);\r\n    });\r\n}\r\n\r\n\r\n/* События на клик, очистка калькулятора */\r\nvar keyAc = doc.getElementById('keyac');\r\nkeyAc.addEventListener('click', pressKeyClear);\r\n\r\n\r\n/* События на клик, добавление точки */\r\nvar keyDot = doc.getElementById('keydot');\r\nkeyDot.addEventListener('click', pressKeyDot);\r\n","'use strict';\r\n\r\n/**\r\n * Смена темы, функция делает замену классов на элементе.\r\n * Функция находит элемен с ID calc и проверяет наличие классов dark и light,\r\n * если класс есть убирает его, если нет добавляет.\r\n * По умолчание один из классов должен быть на элементе.\r\n */\r\n    var changeTheme = function(){\r\n\r\n        var calc = document.getElementById('calc');\r\n        calc.classList.toggle('dark');\r\n        calc.classList.toggle('light');\r\n   \r\n    };\r\n\r\nexport default changeTheme;","'use strict';\r\n\r\n/**\r\n * Смена режима калькулятора между простым и инженерным.\r\n * Функция меняет ширину калькулятора добавляя класс-модификатор и\r\n * изменяет стили в CSS \r\n */\r\n    var changeThemeType = function(){\r\n\r\n        let calc = document.getElementById('calculator'),\r\n            keys = document.querySelectorAll('.key-engineering');\r\n\r\n        calc.classList.toggle('calculator--width');\r\n\r\n        for (var i = 0; i < keys.length; i++){\r\n            keys[i].classList.toggle('key-engineering--none');\r\n        }\r\n        \r\n        \r\n        \r\n   \r\n    };\r\n\r\nexport default changeThemeType;"],"sourceRoot":""}